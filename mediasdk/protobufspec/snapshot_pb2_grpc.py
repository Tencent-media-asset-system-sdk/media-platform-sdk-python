# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc_mock as grpc

from . import snapshot_pb2 as snapshot__pb2


class SnapshotStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateSnapshot = channel.unary_unary(
                '/trpc.media.snapshot.Snapshot/CreateSnapshot',
                request_serializer=snapshot__pb2.CreateSnapshotRequest.SerializeToString,
                response_deserializer=snapshot__pb2.CreateSnapshotResponse.FromString,
                )
        self.DescribeSnapshotData = channel.unary_unary(
                '/trpc.media.snapshot.Snapshot/DescribeSnapshotData',
                request_serializer=snapshot__pb2.DescribeSnapshotRequest.SerializeToString,
                response_deserializer=snapshot__pb2.DescribeSnapshotResponse.FromString,
                )
        self.UpdateSnapshot = channel.unary_unary(
                '/trpc.media.snapshot.Snapshot/UpdateSnapshot',
                request_serializer=snapshot__pb2.UpdateSnapshotRequest.SerializeToString,
                response_deserializer=snapshot__pb2.UpdateSnapshotResponse.FromString,
                )


class SnapshotServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateSnapshot(self, request, context):
        """@alias=/CreateSnapshot
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescribeSnapshotData(self, request, context):
        """@alias=/DescribeSnapshotData
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSnapshot(self, request, context):
        """@alias=/UpdateSnapshot
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SnapshotServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateSnapshot': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSnapshot,
                    request_deserializer=snapshot__pb2.CreateSnapshotRequest.FromString,
                    response_serializer=snapshot__pb2.CreateSnapshotResponse.SerializeToString,
            ),
            'DescribeSnapshotData': grpc.unary_unary_rpc_method_handler(
                    servicer.DescribeSnapshotData,
                    request_deserializer=snapshot__pb2.DescribeSnapshotRequest.FromString,
                    response_serializer=snapshot__pb2.DescribeSnapshotResponse.SerializeToString,
            ),
            'UpdateSnapshot': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSnapshot,
                    request_deserializer=snapshot__pb2.UpdateSnapshotRequest.FromString,
                    response_serializer=snapshot__pb2.UpdateSnapshotResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'trpc.media.snapshot.Snapshot', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Snapshot(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateSnapshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.snapshot.Snapshot/CreateSnapshot',
            snapshot__pb2.CreateSnapshotRequest.SerializeToString,
            snapshot__pb2.CreateSnapshotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DescribeSnapshotData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.snapshot.Snapshot/DescribeSnapshotData',
            snapshot__pb2.DescribeSnapshotRequest.SerializeToString,
            snapshot__pb2.DescribeSnapshotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSnapshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.snapshot.Snapshot/UpdateSnapshot',
            snapshot__pb2.UpdateSnapshotRequest.SerializeToString,
            snapshot__pb2.UpdateSnapshotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
