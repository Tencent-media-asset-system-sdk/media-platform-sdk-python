# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import mediasdk.grpc_mock as grpc

from . import media_pb2 as media__pb2


class MediaStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateMedias = channel.unary_unary(
                '/trpc.media.media.Media/CreateMedias',
                request_serializer=media__pb2.CreateMediasRequest.SerializeToString,
                response_deserializer=media__pb2.CreateMediasResponse.FromString,
                )
        self.CommitMedias = channel.unary_unary(
                '/trpc.media.media.Media/CommitMedias',
                request_serializer=media__pb2.CommitMediasRequest.SerializeToString,
                response_deserializer=media__pb2.CommitMediasResponse.FromString,
                )
        self.DescribeMedias = channel.unary_unary(
                '/trpc.media.media.Media/DescribeMedias',
                request_serializer=media__pb2.DescribeMediasRequest.SerializeToString,
                response_deserializer=media__pb2.DescribeMediasResponse.FromString,
                )
        self.DescribeMediaDetails = channel.unary_unary(
                '/trpc.media.media.Media/DescribeMediaDetails',
                request_serializer=media__pb2.DescribeMediaDetailsRequest.SerializeToString,
                response_deserializer=media__pb2.DescribeMediaDetailsResponse.FromString,
                )
        self.DeleteMedias = channel.unary_unary(
                '/trpc.media.media.Media/DeleteMedias',
                request_serializer=media__pb2.DeleteMediasRequest.SerializeToString,
                response_deserializer=media__pb2.DeleteMediasResponse.FromString,
                )
        self.RestoreDeletedMedias = channel.unary_unary(
                '/trpc.media.media.Media/RestoreDeletedMedias',
                request_serializer=media__pb2.RestoreDeletedMediasRequest.SerializeToString,
                response_deserializer=media__pb2.RestoreDeletedMediasResponse.FromString,
                )
        self.EmptyTrash = channel.unary_unary(
                '/trpc.media.media.Media/EmptyTrash',
                request_serializer=media__pb2.EmptyTrashRequest.SerializeToString,
                response_deserializer=media__pb2.EmptyTrashResponse.FromString,
                )
        self.DescribeCategories = channel.unary_unary(
                '/trpc.media.media.Media/DescribeCategories',
                request_serializer=media__pb2.DescribeCategoriesRequest.SerializeToString,
                response_deserializer=media__pb2.DescribeCategoriesResponse.FromString,
                )
        self.ModifyMedia = channel.unary_unary(
                '/trpc.media.media.Media/ModifyMedia',
                request_serializer=media__pb2.ModifyMediaRequest.SerializeToString,
                response_deserializer=media__pb2.ModifyMediaResponse.FromString,
                )
        self.RetrieveRelevantTags = channel.unary_unary(
                '/trpc.media.media.Media/RetrieveRelevantTags',
                request_serializer=media__pb2.RetrieveRelevantTagsRequest.SerializeToString,
                response_deserializer=media__pb2.RetrieveRelevantTagsResponse.FromString,
                )
        self.RetrieveLexicalEntry = channel.unary_unary(
                '/trpc.media.media.Media/RetrieveLexicalEntry',
                request_serializer=media__pb2.RetrieveLexicalEntryRequest.SerializeToString,
                response_deserializer=media__pb2.RetrieveLexicalEntryResponse.FromString,
                )
        self.RetrieveTitleMedias = channel.unary_unary(
                '/trpc.media.media.Media/RetrieveTitleMedias',
                request_serializer=media__pb2.RetrieveMediasRequest.SerializeToString,
                response_deserializer=media__pb2.RetrieveMediasResponse.FromString,
                )
        self.RetrieveContentMedias = channel.unary_unary(
                '/trpc.media.media.Media/RetrieveContentMedias',
                request_serializer=media__pb2.RetrieveMediasRequest.SerializeToString,
                response_deserializer=media__pb2.RetrieveMediasResponse.FromString,
                )
        self.RetrieveTextMultiModalMedias = channel.unary_unary(
                '/trpc.media.media.Media/RetrieveTextMultiModalMedias',
                request_serializer=media__pb2.RetrieveMediasRequest.SerializeToString,
                response_deserializer=media__pb2.RetrieveMediasResponse.FromString,
                )
        self.RetrieveTextCrossModalMedias = channel.unary_unary(
                '/trpc.media.media.Media/RetrieveTextCrossModalMedias',
                request_serializer=media__pb2.RetrieveMediasRequest.SerializeToString,
                response_deserializer=media__pb2.RetrieveMediasResponse.FromString,
                )
        self.RetrieveSimilarMedias = channel.unary_unary(
                '/trpc.media.media.Media/RetrieveSimilarMedias',
                request_serializer=media__pb2.RetrieveMediasRequest.SerializeToString,
                response_deserializer=media__pb2.RetrieveMediasResponse.FromString,
                )
        self.RetrieveFaces = channel.unary_unary(
                '/trpc.media.media.Media/RetrieveFaces',
                request_serializer=media__pb2.RetrieveMediasRequest.SerializeToString,
                response_deserializer=media__pb2.RetrieveFacesResponse.FromString,
                )
        self.RetrieveConsistentMedias = channel.unary_unary(
                '/trpc.media.media.Media/RetrieveConsistentMedias',
                request_serializer=media__pb2.RetrieveConsistentMediasRequest.SerializeToString,
                response_deserializer=media__pb2.RetrieveConsistentMediasResponse.FromString,
                )
        self.AssociateWords = channel.unary_unary(
                '/trpc.media.media.Media/AssociateWords',
                request_serializer=media__pb2.AssociateWordsRequest.SerializeToString,
                response_deserializer=media__pb2.AssociateWordsResponse.FromString,
                )
        self.ExtractImages = channel.unary_unary(
                '/trpc.media.media.Media/ExtractImages',
                request_serializer=media__pb2.ExtractImagesRequest.SerializeToString,
                response_deserializer=media__pb2.ExtractImagesResponse.FromString,
                )
        self.CreateResourcePackage = channel.unary_unary(
                '/trpc.media.media.Media/CreateResourcePackage',
                request_serializer=media__pb2.CreateResourcePackageRequest.SerializeToString,
                response_deserializer=media__pb2.CreateResourcePackageResponse.FromString,
                )
        self.DeleteResourcePackage = channel.unary_unary(
                '/trpc.media.media.Media/DeleteResourcePackage',
                request_serializer=media__pb2.DeleteResourcePackageRequest.SerializeToString,
                response_deserializer=media__pb2.ResourcePackageOperateResponse.FromString,
                )
        self.UpdateResourcePackage = channel.unary_unary(
                '/trpc.media.media.Media/UpdateResourcePackage',
                request_serializer=media__pb2.UpdateResourcePackageRequest.SerializeToString,
                response_deserializer=media__pb2.ResourcePackageOperateResponse.FromString,
                )
        self.DescribeResourcePackage = channel.unary_unary(
                '/trpc.media.media.Media/DescribeResourcePackage',
                request_serializer=media__pb2.DescribeResourcePackageRequest.SerializeToString,
                response_deserializer=media__pb2.DescribePackageResponse.FromString,
                )
        self.AddResourceToPackage = channel.unary_unary(
                '/trpc.media.media.Media/AddResourceToPackage',
                request_serializer=media__pb2.AddResourceToPackageRequest.SerializeToString,
                response_deserializer=media__pb2.AddResourceToPackageResponse.FromString,
                )
        self.DeleteResourceFromPackage = channel.unary_unary(
                '/trpc.media.media.Media/DeleteResourceFromPackage',
                request_serializer=media__pb2.DeleteResourceFromPackageRequest.SerializeToString,
                response_deserializer=media__pb2.ResourcePackageOperateResponse.FromString,
                )
        self.UndeleteResourceFromPackage = channel.unary_unary(
                '/trpc.media.media.Media/UndeleteResourceFromPackage',
                request_serializer=media__pb2.UndeleteResourceFromPackageRequest.SerializeToString,
                response_deserializer=media__pb2.ResourcePackageOperateResponse.FromString,
                )
        self.BindMedias = channel.unary_unary(
                '/trpc.media.media.Media/BindMedias',
                request_serializer=media__pb2.BindMediasRequest.SerializeToString,
                response_deserializer=media__pb2.BindMediasResponse.FromString,
                )
        self.DescribeMediaDetailsInner = channel.unary_unary(
                '/trpc.media.media.Media/DescribeMediaDetailsInner',
                request_serializer=media__pb2.DescribeMediaDetailsInnerRequest.SerializeToString,
                response_deserializer=media__pb2.DescribeMediaDetailsInnerResponse.FromString,
                )


class MediaServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateMedias(self, request, context):
        """资源管理
        @alias=/CreateMedias
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommitMedias(self, request, context):
        """@alias=/CommitMedias
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescribeMedias(self, request, context):
        """@alias=/DescribeMedias
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescribeMediaDetails(self, request, context):
        """@alias=/DescribeMediaDetails
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMedias(self, request, context):
        """@alias=/DeleteMedias
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreDeletedMedias(self, request, context):
        """@alias=/RestoreDeletedMedias
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EmptyTrash(self, request, context):
        """@alias=/EmptyTrash
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescribeCategories(self, request, context):
        """@alias=/DescribeCategories
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModifyMedia(self, request, context):
        """@alias=/ModifyMedia
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveRelevantTags(self, request, context):
        """@alias=/RetrieveRelevantTags
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveLexicalEntry(self, request, context):
        """@alias=/RetrieveLexicalEntry
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveTitleMedias(self, request, context):
        """RetrieveTitleMedias 和 RetrieveContentMedias 目前废弃不用了
        @alias=/RetrieveTitleMedias 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveContentMedias(self, request, context):
        """@alias=/RetrieveContentMedias
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveTextMultiModalMedias(self, request, context):
        """@alias=/RetrieveTextMultiModalMedias
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveTextCrossModalMedias(self, request, context):
        """@alias=/RetrieveTextCrossModalMedias
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveSimilarMedias(self, request, context):
        """@alias=/RetrieveSimilarMedias
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveFaces(self, request, context):
        """@alias=/RetrieveFaces
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveConsistentMedias(self, request, context):
        """@alias=/RetrieveConsistentMedias
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssociateWords(self, request, context):
        """@alias=/AssociateWords
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExtractImages(self, request, context):
        """@alias=/ExtractImages
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateResourcePackage(self, request, context):
        """资源包管理
        @alias=/CreateResourcePackage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteResourcePackage(self, request, context):
        """@alias=/DeleteResourcePackage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateResourcePackage(self, request, context):
        """@alias=/UpdateResourcePackage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescribeResourcePackage(self, request, context):
        """@alias=/DescribeResourcePackage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddResourceToPackage(self, request, context):
        """@alias=/AddResourceToPackage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteResourceFromPackage(self, request, context):
        """@alias=/DeleteResourceFromPackage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UndeleteResourceFromPackage(self, request, context):
        """@alias=/UndeleteResourceFromPackage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BindMedias(self, request, context):
        """内部接口
        @alias=/BindMedias
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescribeMediaDetailsInner(self, request, context):
        """@alias=/DescribeMediaDetailsInner
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MediaServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateMedias': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMedias,
                    request_deserializer=media__pb2.CreateMediasRequest.FromString,
                    response_serializer=media__pb2.CreateMediasResponse.SerializeToString,
            ),
            'CommitMedias': grpc.unary_unary_rpc_method_handler(
                    servicer.CommitMedias,
                    request_deserializer=media__pb2.CommitMediasRequest.FromString,
                    response_serializer=media__pb2.CommitMediasResponse.SerializeToString,
            ),
            'DescribeMedias': grpc.unary_unary_rpc_method_handler(
                    servicer.DescribeMedias,
                    request_deserializer=media__pb2.DescribeMediasRequest.FromString,
                    response_serializer=media__pb2.DescribeMediasResponse.SerializeToString,
            ),
            'DescribeMediaDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.DescribeMediaDetails,
                    request_deserializer=media__pb2.DescribeMediaDetailsRequest.FromString,
                    response_serializer=media__pb2.DescribeMediaDetailsResponse.SerializeToString,
            ),
            'DeleteMedias': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMedias,
                    request_deserializer=media__pb2.DeleteMediasRequest.FromString,
                    response_serializer=media__pb2.DeleteMediasResponse.SerializeToString,
            ),
            'RestoreDeletedMedias': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreDeletedMedias,
                    request_deserializer=media__pb2.RestoreDeletedMediasRequest.FromString,
                    response_serializer=media__pb2.RestoreDeletedMediasResponse.SerializeToString,
            ),
            'EmptyTrash': grpc.unary_unary_rpc_method_handler(
                    servicer.EmptyTrash,
                    request_deserializer=media__pb2.EmptyTrashRequest.FromString,
                    response_serializer=media__pb2.EmptyTrashResponse.SerializeToString,
            ),
            'DescribeCategories': grpc.unary_unary_rpc_method_handler(
                    servicer.DescribeCategories,
                    request_deserializer=media__pb2.DescribeCategoriesRequest.FromString,
                    response_serializer=media__pb2.DescribeCategoriesResponse.SerializeToString,
            ),
            'ModifyMedia': grpc.unary_unary_rpc_method_handler(
                    servicer.ModifyMedia,
                    request_deserializer=media__pb2.ModifyMediaRequest.FromString,
                    response_serializer=media__pb2.ModifyMediaResponse.SerializeToString,
            ),
            'RetrieveRelevantTags': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveRelevantTags,
                    request_deserializer=media__pb2.RetrieveRelevantTagsRequest.FromString,
                    response_serializer=media__pb2.RetrieveRelevantTagsResponse.SerializeToString,
            ),
            'RetrieveLexicalEntry': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveLexicalEntry,
                    request_deserializer=media__pb2.RetrieveLexicalEntryRequest.FromString,
                    response_serializer=media__pb2.RetrieveLexicalEntryResponse.SerializeToString,
            ),
            'RetrieveTitleMedias': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveTitleMedias,
                    request_deserializer=media__pb2.RetrieveMediasRequest.FromString,
                    response_serializer=media__pb2.RetrieveMediasResponse.SerializeToString,
            ),
            'RetrieveContentMedias': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveContentMedias,
                    request_deserializer=media__pb2.RetrieveMediasRequest.FromString,
                    response_serializer=media__pb2.RetrieveMediasResponse.SerializeToString,
            ),
            'RetrieveTextMultiModalMedias': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveTextMultiModalMedias,
                    request_deserializer=media__pb2.RetrieveMediasRequest.FromString,
                    response_serializer=media__pb2.RetrieveMediasResponse.SerializeToString,
            ),
            'RetrieveTextCrossModalMedias': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveTextCrossModalMedias,
                    request_deserializer=media__pb2.RetrieveMediasRequest.FromString,
                    response_serializer=media__pb2.RetrieveMediasResponse.SerializeToString,
            ),
            'RetrieveSimilarMedias': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveSimilarMedias,
                    request_deserializer=media__pb2.RetrieveMediasRequest.FromString,
                    response_serializer=media__pb2.RetrieveMediasResponse.SerializeToString,
            ),
            'RetrieveFaces': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveFaces,
                    request_deserializer=media__pb2.RetrieveMediasRequest.FromString,
                    response_serializer=media__pb2.RetrieveFacesResponse.SerializeToString,
            ),
            'RetrieveConsistentMedias': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveConsistentMedias,
                    request_deserializer=media__pb2.RetrieveConsistentMediasRequest.FromString,
                    response_serializer=media__pb2.RetrieveConsistentMediasResponse.SerializeToString,
            ),
            'AssociateWords': grpc.unary_unary_rpc_method_handler(
                    servicer.AssociateWords,
                    request_deserializer=media__pb2.AssociateWordsRequest.FromString,
                    response_serializer=media__pb2.AssociateWordsResponse.SerializeToString,
            ),
            'ExtractImages': grpc.unary_unary_rpc_method_handler(
                    servicer.ExtractImages,
                    request_deserializer=media__pb2.ExtractImagesRequest.FromString,
                    response_serializer=media__pb2.ExtractImagesResponse.SerializeToString,
            ),
            'CreateResourcePackage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateResourcePackage,
                    request_deserializer=media__pb2.CreateResourcePackageRequest.FromString,
                    response_serializer=media__pb2.CreateResourcePackageResponse.SerializeToString,
            ),
            'DeleteResourcePackage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteResourcePackage,
                    request_deserializer=media__pb2.DeleteResourcePackageRequest.FromString,
                    response_serializer=media__pb2.ResourcePackageOperateResponse.SerializeToString,
            ),
            'UpdateResourcePackage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateResourcePackage,
                    request_deserializer=media__pb2.UpdateResourcePackageRequest.FromString,
                    response_serializer=media__pb2.ResourcePackageOperateResponse.SerializeToString,
            ),
            'DescribeResourcePackage': grpc.unary_unary_rpc_method_handler(
                    servicer.DescribeResourcePackage,
                    request_deserializer=media__pb2.DescribeResourcePackageRequest.FromString,
                    response_serializer=media__pb2.DescribePackageResponse.SerializeToString,
            ),
            'AddResourceToPackage': grpc.unary_unary_rpc_method_handler(
                    servicer.AddResourceToPackage,
                    request_deserializer=media__pb2.AddResourceToPackageRequest.FromString,
                    response_serializer=media__pb2.AddResourceToPackageResponse.SerializeToString,
            ),
            'DeleteResourceFromPackage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteResourceFromPackage,
                    request_deserializer=media__pb2.DeleteResourceFromPackageRequest.FromString,
                    response_serializer=media__pb2.ResourcePackageOperateResponse.SerializeToString,
            ),
            'UndeleteResourceFromPackage': grpc.unary_unary_rpc_method_handler(
                    servicer.UndeleteResourceFromPackage,
                    request_deserializer=media__pb2.UndeleteResourceFromPackageRequest.FromString,
                    response_serializer=media__pb2.ResourcePackageOperateResponse.SerializeToString,
            ),
            'BindMedias': grpc.unary_unary_rpc_method_handler(
                    servicer.BindMedias,
                    request_deserializer=media__pb2.BindMediasRequest.FromString,
                    response_serializer=media__pb2.BindMediasResponse.SerializeToString,
            ),
            'DescribeMediaDetailsInner': grpc.unary_unary_rpc_method_handler(
                    servicer.DescribeMediaDetailsInner,
                    request_deserializer=media__pb2.DescribeMediaDetailsInnerRequest.FromString,
                    response_serializer=media__pb2.DescribeMediaDetailsInnerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'trpc.media.media.Media', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Media(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateMedias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/CreateMedias',
            media__pb2.CreateMediasRequest.SerializeToString,
            media__pb2.CreateMediasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CommitMedias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/CommitMedias',
            media__pb2.CommitMediasRequest.SerializeToString,
            media__pb2.CommitMediasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DescribeMedias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/DescribeMedias',
            media__pb2.DescribeMediasRequest.SerializeToString,
            media__pb2.DescribeMediasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DescribeMediaDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/DescribeMediaDetails',
            media__pb2.DescribeMediaDetailsRequest.SerializeToString,
            media__pb2.DescribeMediaDetailsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMedias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/DeleteMedias',
            media__pb2.DeleteMediasRequest.SerializeToString,
            media__pb2.DeleteMediasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestoreDeletedMedias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/RestoreDeletedMedias',
            media__pb2.RestoreDeletedMediasRequest.SerializeToString,
            media__pb2.RestoreDeletedMediasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EmptyTrash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/EmptyTrash',
            media__pb2.EmptyTrashRequest.SerializeToString,
            media__pb2.EmptyTrashResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DescribeCategories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/DescribeCategories',
            media__pb2.DescribeCategoriesRequest.SerializeToString,
            media__pb2.DescribeCategoriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ModifyMedia(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/ModifyMedia',
            media__pb2.ModifyMediaRequest.SerializeToString,
            media__pb2.ModifyMediaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveRelevantTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/RetrieveRelevantTags',
            media__pb2.RetrieveRelevantTagsRequest.SerializeToString,
            media__pb2.RetrieveRelevantTagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveLexicalEntry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/RetrieveLexicalEntry',
            media__pb2.RetrieveLexicalEntryRequest.SerializeToString,
            media__pb2.RetrieveLexicalEntryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveTitleMedias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/RetrieveTitleMedias',
            media__pb2.RetrieveMediasRequest.SerializeToString,
            media__pb2.RetrieveMediasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveContentMedias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/RetrieveContentMedias',
            media__pb2.RetrieveMediasRequest.SerializeToString,
            media__pb2.RetrieveMediasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveTextMultiModalMedias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/RetrieveTextMultiModalMedias',
            media__pb2.RetrieveMediasRequest.SerializeToString,
            media__pb2.RetrieveMediasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveTextCrossModalMedias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/RetrieveTextCrossModalMedias',
            media__pb2.RetrieveMediasRequest.SerializeToString,
            media__pb2.RetrieveMediasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveSimilarMedias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/RetrieveSimilarMedias',
            media__pb2.RetrieveMediasRequest.SerializeToString,
            media__pb2.RetrieveMediasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveFaces(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/RetrieveFaces',
            media__pb2.RetrieveMediasRequest.SerializeToString,
            media__pb2.RetrieveFacesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveConsistentMedias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/RetrieveConsistentMedias',
            media__pb2.RetrieveConsistentMediasRequest.SerializeToString,
            media__pb2.RetrieveConsistentMediasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssociateWords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/AssociateWords',
            media__pb2.AssociateWordsRequest.SerializeToString,
            media__pb2.AssociateWordsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExtractImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/ExtractImages',
            media__pb2.ExtractImagesRequest.SerializeToString,
            media__pb2.ExtractImagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateResourcePackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/CreateResourcePackage',
            media__pb2.CreateResourcePackageRequest.SerializeToString,
            media__pb2.CreateResourcePackageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteResourcePackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/DeleteResourcePackage',
            media__pb2.DeleteResourcePackageRequest.SerializeToString,
            media__pb2.ResourcePackageOperateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateResourcePackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/UpdateResourcePackage',
            media__pb2.UpdateResourcePackageRequest.SerializeToString,
            media__pb2.ResourcePackageOperateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DescribeResourcePackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/DescribeResourcePackage',
            media__pb2.DescribeResourcePackageRequest.SerializeToString,
            media__pb2.DescribePackageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddResourceToPackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/AddResourceToPackage',
            media__pb2.AddResourceToPackageRequest.SerializeToString,
            media__pb2.AddResourceToPackageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteResourceFromPackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/DeleteResourceFromPackage',
            media__pb2.DeleteResourceFromPackageRequest.SerializeToString,
            media__pb2.ResourcePackageOperateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UndeleteResourceFromPackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/UndeleteResourceFromPackage',
            media__pb2.UndeleteResourceFromPackageRequest.SerializeToString,
            media__pb2.ResourcePackageOperateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BindMedias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/BindMedias',
            media__pb2.BindMediasRequest.SerializeToString,
            media__pb2.BindMediasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DescribeMediaDetailsInner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trpc.media.media.Media/DescribeMediaDetailsInner',
            media__pb2.DescribeMediaDetailsInnerRequest.SerializeToString,
            media__pb2.DescribeMediaDetailsInnerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
